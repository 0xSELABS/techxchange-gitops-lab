---
grafana:
  rbac:
    pspEnabled: false
  testFramework:
    enabled: false
  persistence:
    enabled: true
    type: pvc
    accessModes:
      - ReadWriteOnce
    size: 4Gi
    finalizers:
      - kubernetes.io/pvc-protection
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      nginx:
        url: https://raw.githubusercontent.com/nginxinc/kubernetes-ingress/main/grafana/NGINXPlusICDashboard.json
        datasource: Prometheus
  service:
    type: NodePort
    nodePort: 32517
  ingress:
    enabled: true
    # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    # ingressClassName: nginx
    # Values can be templated
    annotations:
      ingress.cloud.f5.com/max-request-header-size: "90"
      ingress.cloud.f5.com/lb-method: random
      ingress.cloud.f5.com/max-fails: "5"
      ingress.cloud.f5.com/connection-timeout: "4000"
      ingress.cloud.f5.com/advertise-policy-type: "internet"
      ingress.cloud.f5.com/advertise-policy-site: "outside system/{{ (datasource "local").APPSTACK_SITE }}"
      ingress.cloud.f5.com/disable-host-rewrite: "grafana"
      ingress.cloud.f5.com/https-auto-cert: "true" #TLS termination with auto cert
      ingress.cloud.f5.com/http-redirect: "true" #Enable HTTP to HTTPs redirect
    hosts:
      - {{ (datasource "local").GRAFANA_HOST }}.{{ (datasource "local").LAB_DOMAIN }}
    labels: {}
    path: /
    pathType: Prefix
    extraPaths: []
